{
	"info": {
		"_postman_id": "8f56e2bb-8b5c-4947-80e3-bcf23bebfb34",
		"name": "JiraApiPostman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25872060"
	},
	"item": [
		{
			"name": "ResponseCodeTests",
			"item": [
				{
					"name": "GetProjects features 200 OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{jiratoken}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "protasov143@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://testingapivit.atlassian.net//rest/api/2/project/10001/features",
							"protocol": "https",
							"host": [
								"testingapivit",
								"atlassian",
								"net"
							],
							"path": [
								"",
								"rest",
								"api",
								"2",
								"project",
								"10001",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProjects features 400 Bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true,
							"user-agent": true,
							"accept": true,
							"accept-encoding": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{jiratoken}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "protasov143@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://testingapivit.atlassian.net//rest/api/2/project/10001/features",
							"protocol": "https",
							"host": [
								"testingapivit",
								"atlassian",
								"net"
							],
							"path": [
								"",
								"rest",
								"api",
								"2",
								"project",
								"10001",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProjects features 401 Unauth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "5555",
									"type": "string"
								},
								{
									"key": "username",
									"value": "protasov143@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://testingapivit.atlassian.net//rest/api/2/project/10001/features",
							"protocol": "https",
							"host": [
								"testingapivit",
								"atlassian",
								"net"
							],
							"path": [
								"",
								"rest",
								"api",
								"2",
								"project",
								"10001",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProjects features 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{jiratoken}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "protasov143@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://testingapivit.atlassian.net//rest/api/2/project/10001/features",
							"protocol": "https",
							"host": [
								"testingapivit",
								"atlassian",
								"net"
							],
							"path": [
								"",
								"rest",
								"api",
								"2",
								"project",
								"10001",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProjects features 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{jiratoken}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "protasov143@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://testingapivit.atlassian.net//rest/api/2/project/10001/features",
							"protocol": "https",
							"host": [
								"testingapivit",
								"atlassian",
								"net"
							],
							"path": [
								"",
								"rest",
								"api",
								"2",
								"project",
								"10001",
								"features"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ValidateResponseJSONValue",
			"item": [
				{
					"name": "GetProjects features",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"Validate JSON value in response\", ()=>{",
									"  pm.expect(response.features[0].projectId).to.eql(10001);",
									"});",
									"",
									"pm.test(\"Validate JSON data type\", ()=>{",
									"  pm.expect(response.features[0].projectId).to.be.a(\"number\");",
									"});",
									"",
									"pm.test(\"Validate JSON State data type is string\", ()=>{",
									"  pm.expect(response.features[0].state).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{jiratoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://testingapivit.atlassian.net//rest/api/2/project/10001/features",
							"protocol": "https",
							"host": [
								"testingapivit",
								"atlassian",
								"net"
							],
							"path": [
								"",
								"rest",
								"api",
								"2",
								"project",
								"10001",
								"features"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Success Response",
			"item": [
				{
					"name": "GetInstanceInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{jiratoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://testingapivit.atlassian.net/rest/api/3/instance/license",
							"protocol": "https",
							"host": [
								"testingapivit",
								"atlassian",
								"net"
							],
							"path": [
								"rest",
								"api",
								"3",
								"instance",
								"license"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProjects",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*pm.globals.set('globalVar', \"TestGlobal\");",
									"pm.collectionVariables.set('collectionVar', \"TestCollection\");",
									"pm.environment.set('envVar', \"TestEnviroment\");*/",
									"",
									"const employee = [",
									"    {",
									"        \"name\": \"VM\",",
									"        \"dept\": \"IT\"",
									"    },",
									"    {",
									"        \"name\": \"RCV\",",
									"        \"dept\": \"HR\"",
									"    },",
									"    {",
									"        \"name\": \"TLV\",",
									"        \"dept\": \"Finance\"",
									"    }",
									"]",
									"",
									"console.log(employee.map((value)=> value.name));",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*pm.test(\"Validate the text\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.maxResults).to.eql(50);",
									"});*/",
									"",
									"var response = pm.response.json();",
									"console.log(response.values[1].id);",
									"",
									"pm.collectionVariables.set('projectID', response.values[1].id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{jiratoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{hostname}}/rest/api/2/project/search",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"project",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All issue types for project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"for(i=0; i<response.length; i++) {",
									"    if(response[i].name === 'Task'){",
									"        pm.collectionVariables.set('issueTypeID', response[i].id)",
									"    }",
									"}",
									"",
									"console.log(response[1].id);",
									"",
									"pm.collectionVariables.set('issueID', response[1].id);",
									"",
									"//console.log(response);",
									"//console.log(response.map((value) => value.name));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{jiratoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://testingapivit.atlassian.net/rest/api/2/issuetype/project?projectId={{projectID}}",
							"protocol": "https",
							"host": [
								"testingapivit",
								"atlassian",
								"net"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issuetype",
								"project"
							],
							"query": [
								{
									"key": "projectId",
									"value": "{{projectID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users assignable to project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"console.log(response[0].accountId);",
									"",
									"pm.collectionVariables.set('accountID', response[0].accountId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{jiratoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://testingapivit.atlassian.net/rest/api/2/user/assignable/multiProjectSearch?projectKeys=POS",
							"protocol": "https",
							"host": [
								"testingapivit",
								"atlassian",
								"net"
							],
							"path": [
								"rest",
								"api",
								"2",
								"user",
								"assignable",
								"multiProjectSearch"
							],
							"query": [
								{
									"key": "projectKeys",
									"value": "POS"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Create Issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"console.log(response);",
							"",
							"pm.collectionVariables.set('createdIssueID', response.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set('globalVar', \"TestGlobal\");",
							"pm.collectionVariables.set('collectionVar', \"TestCollection\");",
							"pm.environment.set('envVar', \"TestEnviroment\");",
							"",
							"",
							"console.log(pm.globals.get('globalVar'));",
							"console.log(pm.collectionVariables.get('collectionVar'));",
							"console.log(pm.environment.get('envVar'));",
							"",
							"pm.globals.unset('globalVar');",
							"pm.collectionVariables.unset('collectionVar');",
							"pm.environment.unset('envVar');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{jiratoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"fields\": {\n        \"issuetype\": {\n            \"id\": \"{{issueID}}\"\n        },\n        \"project\": {\n            \"id\": \"{{projectID}}\"\n        },\n        \"reporter\": {\n            \"id\": \"{{accountID}}\"\n        },\n        \"summary\": \"Attempt 5 Postman API Testing - Issue created by postman\"\n    },\n    \"update\": {}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://testingapivit.atlassian.net/rest/api/2/issue",
					"protocol": "https",
					"host": [
						"testingapivit",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Pre-created Issue",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{jiratoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://testingapivit.atlassian.net/rest/api/2/issue/:issueIdOrKey",
					"protocol": "https",
					"host": [
						"testingapivit",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue",
						":issueIdOrKey"
					],
					"variable": [
						{
							"key": "issueIdOrKey",
							"value": "10001"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Issue",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{jiratoken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://testingapivit.atlassian.net/rest/api/2/issue/:issueIdOrKey",
					"protocol": "https",
					"host": [
						"testingapivit",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue",
						":issueIdOrKey"
					],
					"variable": [
						{
							"key": "issueIdOrKey",
							"value": "{{createdIssueID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetProjects features",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{jiratoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://testingapivit.atlassian.net//rest/api/2/project/10001/features",
					"protocol": "https",
					"host": [
						"testingapivit",
						"atlassian",
						"net"
					],
					"path": [
						"",
						"rest",
						"api",
						"2",
						"project",
						"10001",
						"features"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "projectID",
			"value": ""
		},
		{
			"key": "issueID",
			"value": ""
		},
		{
			"key": "accountID",
			"value": ""
		},
		{
			"key": "createdIssueID",
			"value": ""
		},
		{
			"key": "collectionVar",
			"value": ""
		},
		{
			"key": "issueTypeID",
			"value": ""
		},
		{
			"key": "issueTypeIDMap",
			"value": ""
		}
	]
}